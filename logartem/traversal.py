
# ุฎูุงุฑุฒููุฉ ุงูุจุญุซ ูู ุดุฌุฑุฉ ุซูุงุฆูุฉ
# ููู ุจุชูููุฐ ุนูููุฉ ุงูุชุตูุญ (Traversal) ุนูู ุดุฌุฑุฉ ุซูุงุฆูุฉ ุจุงุณุชุฎุฏุงู ุฃุณููุจ ุงูุจุญุซ ุจุงูุนูู (DFS)
# ๐ฏ ููุฎุต ุงูููุฑุฉ
# 1๏ธโฃ ุงูุชุตูุญ (Traversal) ูู ุนูููุฉ ุฒูุงุฑุฉ ูู ุงูุนูุฏ ูู ุงูุดุฌุฑุฉ ููู ุชุฑุชูุจ ูุนูู.
# 2๏ธโฃ ูุฏููุง 3 ุทุฑู ุฑุฆูุณูุฉ:
# Inorder (ุงููุณุงุฑ โ ุงูุฌุฐุฑ โ ุงููููู)
# Preorder (ุงูุฌุฐุฑ โ ุงููุณุงุฑ โ ุงููููู)
# Postorder (ุงููุณุงุฑ โ ุงููููู โ ุงูุฌุฐุฑ)
# 3๏ธโฃ ูุณุชุฎุฏู ุงูุชูุฑุงุฑ (Recursion) ูุงุณุชุฏุนุงุก ููุณ ุงูุฏุงูุฉ ุนูู ุงููุฑูุน ุงููููู ูุงููุณุฑู.
# 4๏ธโฃ ูููู ุชุทุจูู ูุฐู ุงูุฏูุงู ุนูู ุฃู ุดุฌุฑุฉ ุซูุงุฆูุฉุ ููู ูููุฏุฉ ูู ุงูุจุญุซ ููุนุงูุฌุฉ ุงูุจูุงูุงุช.

def inorder_traversal(root):
    if root is None:
        return []
    return inorder_traversal(root.left) + [root.value] + inorder_traversal(root.right)

def preorder_traversal(root):
    if root is None:
        return []
    return [root.value] + preorder_traversal(root.left) + preorder_traversal(root.right)

def postorder_traversal(root):
    if root is None:
        return []
    return postorder_traversal(root.left) + postorder_traversal(root.right) + [root.value]
 
# ุชุนุฑูู ุงูุดุฌุฑุฉ
class Node:
    def __init__(self, value):
        self.value = value
        self.left = None
        self.right = None

# ุฅูุดุงุก ุงูุดุฌุฑุฉ
root = Node('A')
root.left = Node('B')
root.right = Node('C')
root.left.left = Node('D')
root.left.right = Node('E')
root.right.right = Node('F')

# ุชูููุฐ ุนูููุงุช ุงูุชุตูุญ
print("Inorder Traversal:", inorder_traversal(root))   # ['D', 'B', 'E', 'A', 'C', 'F']
print("Preorder Traversal:", preorder_traversal(root)) # ['A', 'B', 'D', 'E', 'C', 'F']
print("Postorder Traversal:", postorder_traversal(root)) # ['D', 'E', 'B', 'F', 'C', 'A']

# Inorder	๐น ุงุณุชุฑุฌุงุน ุงูุจูุงูุงุช ุจุชุฑุชูุจ ุชุตุงุนุฏู โ ๐น ุงูุจุญุซ ูู ุดุฌุฑุฉ ุงูุจุญุซ ุงูุซูุงุฆูุฉ (BST) โ
# Preorder	๐น ุงุณุชูุณุงุฎ ุงูุฃุดุฌุงุฑ โ ๐น ุญูุธ ุงูุดุฌุฑุฉ ูู ููู ูุงุณุชุนุงุฏุชูุง โ ๐น ุฅูุฌุงุฏ ุงููุณุงุฑุงุช ูู ุงูุฐูุงุก ุงูุงุตุทูุงุนู โ
# Postorder	๐น ุญุฐู ุงูุดุฌุฑุฉ โ ๐น ุชูููู ุงูุชุนุจูุฑุงุช ุงูุฑูุงุถูุฉ โ ๐น ุญู ูุดููุงุช ุงูุชุจุนูุงุช ูู ุงูุฃูุธูุฉ โ
# 1๏ธโฃ ุฅุฐุง ููุช ุชุญุชุงุฌ ุฅูู ูุฑุฒ ุงูุจูุงูุงุชุ ุงุณุชุฎุฏู Inorder Traversal.
# 2๏ธโฃ ุฅุฐุง ููุช ุชุฑูุฏ ุญูุธ ุฃู ุงุณุชูุณุงุฎ ุงูุดุฌุฑุฉุ ุงุณุชุฎุฏู Preorder Traversal.
# 3๏ธโฃ ุฅุฐุง ููุช ุชุฑูุฏ ุญุฐู ุงูุดุฌุฑุฉ ุฃู ุชูููู ุงูุนูููุงุช ุงูุญุณุงุจูุฉุ ุงุณุชุฎุฏู Postorder Traversal.